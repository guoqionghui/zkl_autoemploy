{"version":3,"sources":["js/lib/Cordova/cordova.js","js/lib/Cordova/file.js","js/lib/Cordova/sino_plugins.js"],"names":["sino_cordova_checkApp","navigator","userAgent","indexOf","localStorage","sino_app_version","findCordovaPath","path","scripts","document","getElementsByTagName","term","n","length","src","replace","substring","window","appVersion","scriptE","createElement","setAttribute","body","appendChild","sino_file","tempDirURL","enabled","resolveLocalFileSystemURL","requestFileSystem","readType","BLOB","TEXT","DATA_URL","ARRAY","FILE_URI","CORDOVA_URL","readFileByPath","type","callback","onSuccess","fs","root","getFile","fileEntry","readFile","errorHandler","TEMPORARY","readFileByURL","url","writeFileByURL","content","createWriter","fileWriter","onwriteend","e","onerror","console","log","toString","write","createFile","index","lastIndexOf","dir","slice","fileName","create","isExist","entry","mkdirs","createDir","split","rootDirEntry","folders","getDirectory","dirEntry","move","newName","_dir","srcEntry","moveTo","deleteByURL","isFile","remove","removeRecursively","error","deleteTemp","readEntries","dirReader","results","forEach","i","createReader","success","file","reader","FileReader","onloadend","target","result","readAsBinaryString","readAsText","readAsDataURL","readAsArrayBuffer","toURL","localURL","uploadFile","options","upload","parames","ft","FileTransfer","fileURL","server","r","currData","data","returnData","push","respObj","JSON","parse","response","flag","onprogress","headers","isStart","download","onError","savePath","cordovaURL","coverOnExit","existData","$","execSinoPlugin","id","fn","_argsMap","cordova","exec","err","_sino","sino","1001","2002","2004","2005","2006","2007","3003","3005","3004","4000","4001","3001","3002","2011","2012","3006","3007","4003","4004","4005","6666","6001","6002","7777","LivenessDetection","getInitData","clientDetailsPhone","getVersion","customSycn","goCustom","getCustom","saveCustom","getIDCardInfo","getBankCardInfo","getVisitCardInfo","confirmIDCardInfo","confirmBankCardInfo","confirmVisitCardInfo","deleteCustom","digitalSignature","takePhoto","takePhoto_upload","uploadPhoto","inUploadPage","shareWX","shareQQ","goHomePage","signAppnt","signInsure","signRiskWarn","sendUserMsg","initMyCount","reinitMyCount","openPDF","modifyLockGesture","checkGesture","entryOtherSys","entryLocalSys"],"mappings":"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","file":"js/lib/Cordova/cordova.js","sourcesContent":["/**\n * 用于判断当前访问的浏览器类型,以便引用不同的cordova.js文件\n * 请注意将该文件引入放置到html文件的末尾,否则无法正常工作\n */\n(function (){\n\twindow.appVersion = sino_cordova_checkApp();\n\t\n\t//如果不是浏览器版本 需要添加cordova\n\tif(appVersion != 'Browser'){\n\t\tvar scriptE = document.createElement('script');\n\t\tscriptE.setAttribute('type','text/javascript');\n\t\tscriptE.setAttribute('src',findCordovaPath() + appVersion+'/cordova.js');\n\t\tdocument.body.appendChild(scriptE);\n\t}\n\t\n\tfunction sino_cordova_checkApp(){\n\t\t//安卓APP UA中增加了自定义的 字符串 用此来判断用户使用的是安卓APP访问\n\t\tif(navigator.userAgent.indexOf('SINO_ANDROID_APP') != -1){\n\t\t\treturn 'Android';\n\t\t}else if(localStorage.sino_app_version == 'IPAD' || navigator.userAgent.indexOf('SINO_IOS_APP') != -1){\n\t\t\t//IOS由于修改UA无效 所以 在localStorage中增加了数据 用于判断\n\t\t\treturn 'IOS';\n\t\t}else{\n\t\t\treturn 'Browser';\n\t\t}\n\t}\n\t\n\tfunction findCordovaPath() {\n\t    var path = null;\n\t    var scripts = document.getElementsByTagName('script');\n\t    var term = '/cordova.js';\n\t    for (var n = scripts.length-1; n>-1; n--) {\n\t        var src = scripts[n].src.replace(/\\?.*$/, ''); // Strip any query param (CB-6007).\n\t        if (src.indexOf(term) == (src.length - term.length)) {\n\t            path = src.substring(0, src.length - term.length) + '/';\n\t            break;\n\t        }\n\t    }\n\t    return path;\n\t}\n})();","/**\n *  用于HTML5文件相关操作\n *  适用于cordova APP(phoneGap)\n *  最悲哀的就是没人懂你的喜悦\n *  @author LHY\n */\n\n(function() {\n    window.sino_file = {};\n    \n    sino_file.tempDirURL = 'cdvfile://localhost/temporary/';\n    \n    sino_file.enabled = window.resolveLocalFileSystemURL && window.requestFileSystem;\n    \n    //用于读取数据的类型 \n    sino_file.readType = {\n        BLOB:0, //二进制字符串\n        TEXT:1, //文本字符串\n        DATA_URL:2, //BASE64编码\n        ARRAY:3, //ArrayBuffer 对象\n        FILE_URI:4, //filesystem地址\n        CORDOVA_URL:5 //cordova 的url 可用于src等属性\n    };\n    \n    /**\n     * 读取文件内容\n     * @param path 文件路径\n     * @param type @see sino_file.readType\n     * @param callback\n     */\n    sino_file.readFileByPath = function(path,type,callback){\n        type = type || 'text';//默认为text\n        \n        window.requestFileSystem(window.TEMPORARY, 10 * 1024 * 1024,onSuccess, sino_file.errorHandler);\n        function onSuccess(fs){\n            fs.root.getFile(path, {}, function(fileEntry) {\n                //读取文件\n                sino_file.readFile(fileEntry,type,callback,sino_file.errorHandler);\n            },sino_file.errorHandler);\n        }\n        \n    };\n    \n    /**\n     * 根据filesystem URL 读取文件 \n     * @param url 文件路径 在ios中格式为 file:///... 也可以为 cordova url格式\n     * @param type @see sino_file.readType\n     * @param callback 读取后的回调函数 参数为 读取到得数据\n     */\n    sino_file.readFileByURL = function(url,type,callback){\n        window.resolveLocalFileSystemURL(url, function(fileEntry) {\n            //读取文件\n            sino_file.readFile(fileEntry,type,callback,sino_file.errorHandler);\n        },sino_file.errorHandler);\n    };\n    \n    /**\n     * 向文件中写入内容\n     * @param url 文件路径\n     * @param content 写入的内容\n     * @param callback 写入成功后回调函数\n     */\n    sino_file.writeFileByURL = function(url,content,callback){\n        window.resolveLocalFileSystemURL(url, function(fileEntry) {\n            fileEntry.createWriter(function(fileWriter){\n                fileWriter.onwriteend = function(e) {\n                    if(callback) callback();\n                };\n\n                fileWriter.onerror = function(e) {\n                    console.log('Write failed: ' + e.toString());\n                };\n                \n                fileWriter.write(content);\n            },sino_file.errorHandler);\n        });\n    };\n    \n    /**\n     * 创建文件\n     */\n    sino_file.createFile = function(url,callback){\n        var index = url.lastIndexOf('/');\n        var dir = url.slice(0,index);\n        var fileName = url.slice(index+1);\n        console.log(dir);\n        console.log(fileName);\n        \n        window.resolveLocalFileSystemURL(dir, function(fileEntry) {\n            console.log('获得文件成功');\n            fileEntry.getFile(fileName,{create:true},function(fileEntry){\n                if(callback) callback(fileEntry);\n            },sino_file.errorHandler);\n        },sino_file.errorHandler);\n    }\n    \n    /**\n     * 根据文件路径 判断文件是否存在\n     * @param url\n     * @param callback 参数{\n     *      isExist:1 存在 0 不存在\n     *      entry:当文件存在时返回文件对象\n     * }\n     */\n    sino_file.isExist = function(url,callback){\n        window.resolveLocalFileSystemURL(url,function(fileEntry){\n            callback({\n                isExist:1,\n                entry:fileEntry\n            });\n        },function(e){\n            callback({\n                isExist:0\n            });\n        });\n    };\n    \n    \n    /**\n     * 根据路径创建目录\n     * @param path\n     * @param callback 返回最后创建成功的目录entry\n     */\n    sino_file.mkdirs = function(path,callback){\n        window.requestFileSystem(window.TEMPORARY, 10 * 1024 * 1024,onSuccess, sino_file.errorHandler);\n        \n        \n        function onSuccess(fs){\n            createDir(fs.root,path.split('/'));\n        }\n        \n        function createDir(rootDirEntry, folders) {\n            if (folders[0] == '.' || folders[0] == '') {\n                folders = folders.slice(1);\n            }\n            \n            rootDirEntry.getDirectory(folders[0], {create: true}, function(dirEntry) {\n                if (folders.length > 1 ) {\n                    createDir(dirEntry, folders.slice(1));\n                }else{\n                    if(callback) callback(dirEntry);\n                }\n            }, sino_file.errorHandler);\n        };\n    };\n    \n    /**\n     * 移动文件 \n     * @param src 原文件URL\n     * @param dir 目标URL 以cdvfile://localhost/temporary/ 开头\n     * @param newName copy后文件名称 如果无需改名 为null\n     * @param callback \n     */\n    sino_file.move = function(src,dir,newName,callback){\n        console.log('准备移动文件,src:'+src+'\\ndir:'+dir+'\\nnewName:'+newName);\n        var _dir = dir.replace(sino_file.tempDirURL,'');\n        console.log(_dir);\n        sino_file.mkdirs(_dir,function(dirEntry){\n            window.resolveLocalFileSystemURL(src,function(srcEntry){\n                srcEntry.moveTo(dirEntry,newName);\n                if(callback) callback();\n            });\n        });\n    };\n    \n    /**\n     * 根据url删除 文件\n     * @param url 文件url file:/// 或 cdvfile:// \n     * @param callback 执行完成后回调函数\n     */\n    sino_file.deleteByURL = function(url,callback){\n        try{\n            window.resolveLocalFileSystemURL(url, function(entry) {\n                if(entry.isFile){\n                    entry.remove();\n                }else{\n                    entry.removeRecursively();\n                }\n                if(callback) callback();\n            },function(){\n                if(callback) callback();\n            });\n        }catch(e){\n            console.error(e);\n            if(callback) callback();\n        }\n        \n    };\n    \n    /**\n     * 删除temp目录下所有文件\n     * @param callback\n     * @param type file 为删除文件 dir 为删除目录 为空 则都删除\n     */\n    sino_file.deleteTemp = function(callback,type){\n        window.requestFileSystem(window.TEMPORARY, 10 * 1024 * 1024,onSuccess, sino_file.errorHandler);\n        \n        function onSuccess(fs){\n            var dirReader = fs.root.createReader();\n            \n            readEntries();\n            \n            function readEntries(){\n                dirReader.readEntries(function(results){\n                    if(results.length){\n                        results.forEach(function(entry,i){\n                            if(entry.isFile){\n                                if(!type || type == 'file') entry.remove();\n                            }else{\n                                if(!type || type == 'dir') entry.removeRecursively();\n                            }\n                        });\n                        readEntries();\n                    }else{\n                        if(callback) callback();\n                    }\n                });\n            }\n        }\n    };\n    \n    /**\n     * 根据type读取文件\n     */\n    sino_file.readFile = function(fileEntry,type,success,error){\n        console.log('fileEntry:');\n        console.log(fileEntry);\n        fileEntry.file(function(file) {\n            console.log('开始读取文件');\n            console.log(file);\n            var reader = new FileReader();\n            reader.onloadend = function(e) {\n                console.log(e);\n                success(e.target.result);\n            };\n\n            switch (type) {\n                case sino_file.readType.BLOB:\n                    reader.readAsBinaryString(file);\n                    break;\n                case sino_file.readType.TEXT:\n                    reader.readAsText(file);\n                    break;\n                case sino_file.readType.DATA_URL:\n                    reader.readAsDataURL(file);\n                    break;\n                case sino_file.readType.ARRAY:\n                    reader.readAsArrayBuffer(file);\n                    break;\n                case sino_file.readType.FILE_URI:\n                    success(fileEntry.toURL());\n                    break;\n                case sino_file.readType.CORDOVA_URL:\n                    success(file.localURL);\n                    break;\n                default:\n                    reader.readAsText(file);\n                }\n        }, error);\n    };\n\n    /**\n     * 调用cordova 的 file-transfer 插件进行文件上传\n     * 递归上传所有文件 无论失败还是成功均会处理完所有文件 调用回调函数\n     * @param options 对象 \n     * {\n     *      data:[{fileURL:文件地址,options:@see file-transfer的upload方法中options参数}]\n     *      server:服务器地址\n     *      callback: 传入参数数组 每个元素如下{\n     *                            success:如果失败为UNDEFINED 成功为插件回调参数\n     *                            error:如果成功为UNDEFINED 失败为插件回调函数\n     *                            data:执行上传时的data对象\n     *                        }\n     *      onprogress:每完成一次就调用一次每个元素如下{\n     *                            success:如果失败为UNDEFINED 成功为插件回调参数\n     *                            error:如果成功为UNDEFINED 失败为插件回调函数\n     *                            data:执行上传时的data对象\n     *      }\n     * }\n     * \n     * 数组 包含fileURL server options success error等参数\n     */\n    sino_file.uploadFile = function(options){\n        \n        var returnData = [];\n        \n        if(options.data.length > 0){\n            options.data[0].index = 0;\n            options.data[0].options.headers.isStart = 1;//标识这是本次上传中第一个上传请求\n            upload(options.data[0]);\n        }\n        \n        function upload(parames){\n            var ft = new FileTransfer();\n            \n            ft.upload(parames.fileURL,options.server,function(r){\n                console.log('服务器返回:',r);\n                var currData = {\n                    success:r,\n                    data:parames\n                };\n                returnData.push(currData);\n                var respObj = JSON.parse(r.response);\n                var index = parames.index + 1;\n                if(index < options.data.length&&respObj.flag=='1'){\n                    options.data[index].index = index;\n                    options.onprogress(currData);\n                    upload(options.data[index]);\n                }else{\n                    options.onprogress(currData);\n                    options.callback(returnData);\n                }\n            },function(error){\n                console.log('服务器返回:',error);\n                var currData = {\n                        error:error,\n                        data:parames\n                };\n                \n                returnData.push(currData);\n                var index = parames.index + 1;\n                if(index < options.data.length){\n                    options.data[index].index = index;\n                    options.onprogress(currData);\n                    upload(options.data[index]);\n                }else{\n                    options.onprogress(currData);\n                    options.callback(returnData);\n                }\n            },parames.options);\n        }\n        \n    };\n    \n    /**\n     * 下载文件 文件保存在临时目录\n     * @param options 数组 元素格式{\n     *      url:下载路径,\n     *      fileName:文件名,\n     *      coverOnExit:如果文件存在是否覆盖 1为覆盖 0 为不覆盖 直接返回成功\n     * }\n     * @param callback 参数为数组 元素格式{\n     *      success:如果成功 包含成功参数\n     *      error:失败 包含失败参数\n     *      data:当前下载的options子元素\n     * }\n     */\n    sino_file.download = function(options,callback){\n        var returnData = [];\n        if(options.length > 0){\n            options[0].index = 0;\n            download(options[0]);\n        }\n        \n        function download(parames){\n            //如果下载为空 判定为失败 直接进入下一个\n            if(!parames.url){\n                onError({});\n            }else{\n                var ft = new FileTransfer();\n                var savePath = sino_file.tempDirURL+parames.fileName;\n                parames.cordovaURL = savePath;\n                //如果不覆盖已经存在的文件 则不继续下载\n                if(!parames.coverOnExit){\n                    //判断文件是否存在\n                    sino_file.isExist(savePath,function(existData){\n                        console.log('文件'+ (existData.isExist ? '已存在,不进行下载操作' : '不存在,准备下载'));\n                        //如果文件存在  直接返回成功\n                        if(existData.isExist){\n                            onSuccess(existData.entry);\n                        }else{\n                            console.log('开始下载:'+savePath);\n                            ft.download(parames.url,savePath,onSuccess,onError);\n                        }\n                    });\n                }else{\n                    console.log('开始下载:'+savePath);\n                    ft.download(parames.url,savePath,onSuccess,onError);\n                }\n                \n            }\n            \n            \n            function onSuccess(entry){\n                console.log('下载成功:',entry);\n                returnData.push({\n                    success:entry,\n                    data:parames\n                });\n                \n                var index = parames.index + 1;\n                if(index < options.length){\n                    options[index].index = index;\n                    download(options[index]);\n                }else{\n                    callback(returnData);\n                }\n            }\n            \n            function onError(error){\n                console.log('下载失败:',error);\n                returnData.push({\n                    error:error,\n                    data:parames\n                });\n                \n                var index = parames.index + 1;\n                if(index < options.length){\n                    options[index].index = index;\n                    download(options[index]);\n                }else{\n                    callback(returnData);\n                }\n            }\n        }\n    };\n    \n    sino_file.errorHandler = function(e) {\n        console.log('发生错误:',e);\n    };\n})();","/**\r\n * 使用以下方法 请注意首先使用 sino.isApp() 来判断当前是否运行在APP环境中 如果不是则以下方法不可调用\r\n * 通过 cordova.sino 来调用以下方法\r\n * Created by LHY on 16/3/1.\r\n */\r\n\r\n$(function(){\r\n\r\n    if(window.cordova){\r\n        var _sino = cordova.sino = cordova.sino || {};\r\n        var _argsMap = {\r\n            \"1001\": \"getVersion\",\r\n            \"2002\": \"getTabBarTag\",\r\n            \"2004\": \"saveCustomerInfo\",\r\n            \"2005\": \"scanIDCard\",\r\n            \"2006\": \"scanBankCard\",\r\n            \"2007\": \"scanVisitingCard\",\r\n            \"3003\": \"takePhoto\",\r\n            \"3005\": \"initPhotoView\",\r\n            \"3004\": \"imagesUpload\",\r\n            \"4000\": \"receiveMessageNumber\",\r\n            \"4001\": \"setMessageNumberIs0\",\r\n            \"3001\": \"showSignViewController\",\r\n            \"3002\": \"showCameraViewController\",\r\n            \"2011\": \"deleteCustomerInfo\",\r\n            \"2012\": \"requestCustomerData\",\r\n            \"3006\": \"sendNonGifContent\",\r\n            \"3007\": \"sendTencentContent\",\r\n            \"4003\": \"modifyLockGesture\",\r\n            \"4004\": \"checkGesture\",\r\n            \"4005\": \"openLocalURL\",\r\n            \"6666\": \"LivenessDetection\",\r\n            \"6001\": \"entryPreservation\",//进入移动保全\r\n            \"6002\": \"entryLocalSysFromOtherSys\",//移动保全返回\r\n            \"7777\": \"makePhone\"//客户详情打电话接口\r\n\r\n        };\r\n\r\n        /**\r\n         * 获取在开始时由原生传送过来的数据\r\n         * 该方法一般无需调用 页面在加载时会自动调用该方法 同时将数据保存到 sino.appTransData 中\r\n         * @param callback 接收两个参数 flag: 0 失败 1成功  data: 成功返回数据 失败返回错误信息\r\n         */\r\n        _sino.LivenessDetection = function(callback,data){\r\n            execSinoPlugin('6666',callback,data);\r\n        };\r\n        \r\n        _sino.getInitData = function(callback){\r\n            execSinoPlugin('1',callback);\r\n        };\r\n\r\n\r\n        //客户详情打电话接口\r\n        _sino.clientDetailsPhone = function(callback,data){\r\n            execSinoPlugin('7777',callback,data);\r\n        };\r\n\r\n        /**\r\n         * App成功初始化之后获取App的版本和App中H5文件的版本\r\n         * 第一次在登录页面调用\r\n         * @param callback\r\n         * 回调函数返回两个数据 \"ResourceVersion\",\"AppVersion\"\r\n         */\r\n        _sino.getVersion = function(callback){\r\n            execSinoPlugin('1001',callback);\r\n        };\r\n\r\n        /**\r\n         * 登录时同步服务器客户数据\r\n         * @param {Object} callback\r\n         * @param {Object} data\r\n         */\r\n        _sino.customSycn = function(callback,data){\r\n            execSinoPlugin('2001',callback,data);\r\n        };\r\n        /**\r\n         * 从H5界面跳转到客户查询界面\r\n         * @param {Object} callback\r\n         * @param {Object} data\r\n         */\r\n        _sino.goCustom = function(callback,data){\r\n            execSinoPlugin('2002',callback,data);\r\n        };\r\n        /**\r\n         * 从H5界面跳转到客户查询界面(无网络)\r\n         * @param {Object} callback\r\n         * @param {Object} data\r\n         */\r\n        _sino.getCustom = function(callback,data){\r\n            execSinoPlugin('2003',callback,data);\r\n        };\r\n\r\n        /**\r\n         * 保存准客户到客户端\r\n         * @param {Object} callback\r\n         * @param {Object} data\r\n         */\r\n        _sino.saveCustom = function(callback,data){\r\n            execSinoPlugin('2004',callback,data);\r\n        };\r\n\r\n        /**\r\n         * 扫描读取身份证信息\r\n         * @param {Object} callback\r\n         */\r\n        _sino.getIDCardInfo = function(callback){\r\n            execSinoPlugin('2005',callback);\r\n        };\r\n        /**\r\n         * 扫描读取银行卡信息\r\n         * @param {Object} callback\r\n         */\r\n        _sino.getBankCardInfo = function(callback){\r\n            execSinoPlugin('2006',callback);\r\n        };\r\n\r\n        /**\r\n         * 扫描读取名片信息\r\n         * @param {Object} callback\r\n         */\r\n        _sino.getVisitCardInfo = function(callback){\r\n            execSinoPlugin('2007',callback);\r\n        };\r\n        /**\r\n         * 确认身份证信息\r\n         * @param {Object} callback\r\n         */\r\n        _sino.confirmIDCardInfo = function(callback,data){\r\n            execSinoPlugin('2008',callback,data);\r\n        };\r\n        /**\r\n         * 确认银行卡信息\r\n         * @param {Object} callback\r\n         */\r\n        _sino.confirmBankCardInfo = function(callback,data){\r\n            execSinoPlugin('2009',callback,data);\r\n        };\r\n\r\n        /**\r\n         * 确认名片信息\r\n         * @param {Object} callback\r\n         */\r\n        _sino.confirmVisitCardInfo = function(callback,data){\r\n            execSinoPlugin('2010',callback,data);\r\n        };\r\n        /**\r\n         * 删除准客户\r\n         * @param {Object} callback\r\n         */\r\n        _sino.deleteCustom = function(callback,data){\r\n            execSinoPlugin('2011',callback,data);\r\n        };\r\n\r\n        /**\r\n         * 签名接口\r\n         * @param {Object} callback\r\n         */\r\n        _sino.digitalSignature = function(callback,data){\r\n            execSinoPlugin('3001',callback,data);\r\n        };\r\n        /**\r\n         * 拍照接口\r\n         * @param {Object} callback\r\n         */\r\n        _sino.takePhoto = function(callback,data){\r\n            execSinoPlugin('3002',callback,data);\r\n        };\r\n        /**\r\n         * 拍照接口（电子投保资料上传）\r\n         * @param {Object} callback\r\n         */\r\n        _sino.takePhoto_upload = function(callback,data){\r\n            execSinoPlugin('3003',callback,data);\r\n        };\r\n        /**\r\n         * 上传接口（电子投保资料上传）\r\n         * @param {Object} callback\r\n         */\r\n        _sino.uploadPhoto = function(callback,data){\r\n            execSinoPlugin('3004',callback,data);\r\n        };\r\n        /**\r\n         * 页面初始化（电子投保资料上传）\r\n         * @param {Object} callback\r\n         */\r\n        _sino.inUploadPage = function(callback,data){\r\n            execSinoPlugin('3005',callback,data);\r\n        };\r\n        /**\r\n         *微信分享（电子投保预览）\r\n         * @param {Object} callback\r\n         */\r\n        _sino.shareWX = function(callback,data){\r\n            execSinoPlugin('3006',callback,data);\r\n        };\r\n        /**\r\n         *QQ分享（电子投保预览）\r\n         * @param {Object} callback\r\n         */\r\n        _sino.shareQQ = function(callback,data){\r\n            execSinoPlugin('3007',callback,data);\r\n        };\r\n        /**\r\n         * 返回首页\r\n         * @param callback 可选参数 接收两个参数 flag: 0 失败 1成功  data: 成功返回数据 失败返回错误信息\r\n         */\r\n        _sino.goHomePage = function(callback){\r\n            execSinoPlugin('goHomePage',callback);\r\n        };\r\n\r\n        /**\r\n         * 调用投保人签名方法\r\n         * 投保人和被保人签名的方法不同 因为签名框的标题不同\r\n         * @param callback 接收两个参数 flag: 0 失败 1成功  data: 成功返回数据(返回数据为图片BASE64编码) 失败返回错误信息\r\n         */\r\n        _sino.signAppnt = function(callback){\r\n            execSinoPlugin('20',callback);\r\n\r\n        }\r\n\r\n        /**\r\n         * 调用被保人签名方法\r\n         * 投保人和被保人签名的方法不同 因为签名框的标题不同\r\n         * @param callback 接收两个参数 flag: 0 失败 1成功  data: 成功返回数据(返回数据为图片BASE64编码) 失败返回错误信息\r\n         */\r\n        _sino.signInsure = function(callback){\r\n            execSinoPlugin('21',callback);\r\n        }\r\n\r\n        /**\r\n         * 调用抄写风险语录方法\r\n         * @param callback(flag,data) flag: 0 失败 1成功  data: 成功返回数据(返回数据为图片BASE64编码) 失败返回错误信息\r\n         */\r\n        _sino.signRiskWarn = function(callback){\r\n            execSinoPlugin('30',callback)\r\n        }\r\n        /**\r\n         * 登陆成功后发送用户信息\r\n         * @param callback\r\n         * @param data\r\n         */\r\n        _sino.sendUserMsg = function(callback,data){\r\n            execSinoPlugin('2012',callback,data)\r\n        }\r\n        /**\r\n         * 初始化我的 照会、待缴费、待补充资料、回执 的未读条数\r\n         * @param callback\r\n         * @param data\r\n         */\r\n        _sino.initMyCount = function(callback,data){\r\n            execSinoPlugin('4000',callback,data)\r\n        }\r\n        /**\r\n         * 处理我的 照会、待缴费、待补充资料、回执 的未读条数\r\n         * @param callback\r\n         * @param data\r\n         */\r\n        _sino.reinitMyCount = function(callback,data){\r\n            execSinoPlugin('4001',callback,data)\r\n        }\r\n\r\n        /**\r\n         * 调用拍照方法\r\n         * @param callback(flag,data) flag: 0 失败 1成功  data: 成功返回数据(返回数据为图片BASE64编码) 失败返回错误信息\r\n         */\r\n        /*  _sino.takePhoto = function(callback){\r\n              execSinoPlugin('31',callback)\r\n          }*/\r\n\r\n        /**\r\n         * 调用打开PDF 方法\r\n         * @param url callback(flag,data) flag: 0 失败 1成功  data: 成功返回数据 失败返回错误信息\r\n         * @param callback\r\n         */\r\n        _sino.openPDF = function(callback,data){\r\n            execSinoPlugin('4005',callback,data);\r\n        }\r\n\r\n        /**\r\n         * 打开及修改手势密码\r\n         */\r\n        _sino.modifyLockGesture = function(url,callback){\r\n            execSinoPlugin('4003',callback,url);\r\n        }\r\n        /**\r\n         * 判断是否已设置手势密码\r\n         */\r\n        _sino.checkGesture = function(url,callback){\r\n            execSinoPlugin('4004',callback,url);\r\n        }\r\n\r\n        /**\r\n         * 从信易通2.0->移动保全\r\n         */\r\n        _sino.entryOtherSys = function(callback,data){\r\n            execSinoPlugin('6001',callback,data);\r\n        };\r\n        /**\r\n         * 从移动保全-->信易通2.0\r\n         */\r\n        _sino.entryLocalSys= function(callback,data){\r\n            execSinoPlugin('6002',callback,data);\r\n        }\r\n        /**\r\n         * 将日志打印到App中\r\n         */\r\n        /*var log = window.console.log();\r\n        window.console.log = function(){\r\n            if(sino.isApp()){\r\n                execSinoPlugin('9999',function(){},arguments);\r\n            }\r\n            log.apply(window.console,arguments);\r\n        };*/\r\n\r\n        function execSinoPlugin(id,fn,data){\r\n            id = appVersion==='IOS'?_argsMap[id]:id;\r\n            if(data) data = [data];\r\n            else data = [];\r\n            var result = {};\r\n            cordova.exec(function(data) {\r\n                //自定义 调用成功方法 返回参数为json对象。\r\n                result.success = true;\r\n                result.data = data;\r\n                if(fn) fn(result);\r\n            }, function(err) {\r\n                //自定义 调用失败方法 返回参数为err\r\n                result.success = false;\r\n                result.data = err;\r\n                if(fn) fn(result);\r\n\r\n            }, \"SignaPlugin\", id, data);\r\n        }\r\n\r\n    }\r\n\r\n})"],"sourceRoot":"/source/"}