cordova.define("de.appplant.cordova.plugin.local-notification.LocalNotification",function(e,t,i){t.getDefaults=function(){return this.core.getDefaults()},t.setDefaults=function(e){this.core.setDefaults(e)},t.schedule=function(e,t,i,c){this.core.schedule(e,t,i,c)},t.update=function(e,t,i,c){this.core.update(e,t,i,c)},t.clear=function(e,t,i){this.core.clear(e,t,i)},t.clearAll=function(e,t){this.core.clearAll(e,t)},t.cancel=function(e,t,i){this.core.cancel(e,t,i)},t.cancelAll=function(e,t){this.core.cancelAll(e,t)},t.isPresent=function(e,t,i){this.core.isPresent(e,t,i)},t.isScheduled=function(e,t,i){this.core.isScheduled(e,t,i)},t.isTriggered=function(e,t,i){this.core.isTriggered(e,t,i)},t.getAllIds=function(e,t){this.core.getAllIds(e,t)},t.getIds=function(){this.getAllIds.apply(this,arguments)},t.getScheduledIds=function(e,t){this.core.getScheduledIds(e,t)},t.getTriggeredIds=function(e,t){this.core.getTriggeredIds(e,t)},t.get=function(){this.core.get.apply(this.core,arguments)},t.getAll=function(e,t){this.core.getAll(e,t)},t.getScheduled=function(){this.core.getScheduled.apply(this.core,arguments)},t.getAllScheduled=function(e,t){this.core.getAllScheduled(e,t)},t.getTriggered=function(){this.core.getTriggered.apply(this.core,arguments)},t.getAllTriggered=function(e,t){this.core.getAllTriggered(e,t)},t.hasPermission=function(e,t){this.core.hasPermission(e,t)},t.registerPermission=function(e,t){this.core.registerPermission(e,t)},t.add=function(){console.warn("Depreated: Please use `notification.local.schedule` instead."),this.schedule.apply(this,arguments)},t.promptForPermission=function(){console.warn("Depreated: Please use `notification.local.registerPermission` instead."),this.registerPermission.apply(this,arguments)},t.on=function(e,t,i){this.core.on(e,t,i)},t.un=function(e,t){this.core.un(e,t,scope)}});
//# sourceMappingURL=local-notification.js.map
