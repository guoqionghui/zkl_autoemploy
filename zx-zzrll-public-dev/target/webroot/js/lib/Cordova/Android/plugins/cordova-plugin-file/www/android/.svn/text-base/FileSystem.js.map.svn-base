{"version":3,"sources":["js/lib/Cordova/Android/plugins/cordova-plugin-file/www/android/FileSystem.js"],"names":["cordova","define","require","exports","module","FILESYSTEM_PROTOCOL","__format__","fullPath","nativeUrl","path","contentUrlMatch","exec","substring","length","FileSystem","encodeURIPath","test","m","this","name"],"mappings":"AAAAA,QAAQC,OAAO,wCAAyC,SAASC,EAASC,EAASC,GAsBnFC,oBAAsB,UAEtBD,EAAOD,SACHG,WAAY,SAASC,EAAUC,GAC3B,GAAIC,GACAC,EAAkB,gBAAgBC,KAAKH,EAC3C,IAAIE,EAKAD,EAAOD,EAAUI,UAAUF,EAAgB,GAAGG,OAAS,OACpD,CACHJ,EAAOK,WAAWC,cAAcR,GAC3B,MAAMS,KAAKP,KACZA,EAAO,IAAMA,EAGjB,IAAIQ,GAAI,OAAON,KAAKH,EAChBS,KACAR,GAAQQ,EAAE,IAIlB,MAAOZ,qBAAsB,gBAAkBa,KAAKC,KAAOV","file":"js/lib/Cordova/Android/plugins/cordova-plugin-file/www/android/FileSystem.js","sourcesContent":["cordova.define(\"cordova-plugin-file.androidFileSystem\", function(require, exports, module) {\n/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\nFILESYSTEM_PROTOCOL = \"cdvfile\";\n\nmodule.exports = {\n    __format__: function(fullPath, nativeUrl) {\n        var path;\n        var contentUrlMatch = /^content:\\/\\//.exec(nativeUrl);\n        if (contentUrlMatch) {\n            // When available, use the path from a native content URL, which was already encoded by Android.\n            // This is necessary because JavaScript's encodeURI() does not encode as many characters as\n            // Android, which can result in permission exceptions when the encoding of a content URI\n            // doesn't match the string for which permission was originally granted.\n            path = nativeUrl.substring(contentUrlMatch[0].length - 1);\n        } else {\n            path = FileSystem.encodeURIPath(fullPath);\n            if (!/^\\//.test(path)) {\n                path = '/' + path;\n            }\n            \n            var m = /\\?.*/.exec(nativeUrl);\n            if (m) {\n                path += m[0];\n            }\n        }\n\n        return FILESYSTEM_PROTOCOL + '://localhost/' + this.name + path;\n    }\n};\n\n\n});\n"],"sourceRoot":"/source/"}