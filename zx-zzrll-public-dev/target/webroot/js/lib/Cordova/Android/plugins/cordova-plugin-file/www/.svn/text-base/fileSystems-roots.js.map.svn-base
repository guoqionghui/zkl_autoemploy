{"version":3,"sources":["js/lib/Cordova/Android/plugins/cordova-plugin-file/www/fileSystems-roots.js"],"names":["cordova","define","require","exports","module","fsMap","FileSystem","exec","getFs","name","callback","success","response","i","length","fsRoot","fs","filesystemName"],"mappings":"AAAAA,QAAQC,OAAO,wCAAyC,SAASC,EAASC,EAASC,GAuBnF,GAAIC,GAAQ,KACRC,EAAaJ,EAAQ,gBACrBK,EAAOL,EAAQ,eAGnBA,GAAQ,iBAAiBM,MAAQ,SAASC,EAAMC,GAC5C,QAASC,GAAQC,GACbP,IACA,KAAK,GAAIQ,GAAI,EAAGA,EAAID,EAASE,SAAUD,EAAG,CACtC,GAAIE,GAASH,EAASC,GAClBG,EAAK,GAAIV,GAAWS,EAAOE,eAAgBF,EAC/CV,GAAMW,EAAGP,MAAQO,EAErBN,EAASL,EAAMI,IAGfJ,EACAK,EAASL,EAAMI,IAEfF,EAAKI,EAAS,KAAM,OAAQ","file":"js/lib/Cordova/Android/plugins/cordova-plugin-file/www/fileSystems-roots.js","sourcesContent":["cordova.define(\"cordova-plugin-file.fileSystems-roots\", function(require, exports, module) {\n/*\n *\n * Licensed to the Apache Software Foundation (ASF) under one\n * or more contributor license agreements.  See the NOTICE file\n * distributed with this work for additional information\n * regarding copyright ownership.  The ASF licenses this file\n * to you under the Apache License, Version 2.0 (the\n * \"License\"); you may not use this file except in compliance\n * with the License.  You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied.  See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n*/\n\n// Map of fsName -> FileSystem.\nvar fsMap = null;\nvar FileSystem = require('./FileSystem');\nvar exec = require('cordova/exec');\n\n// Overridden by Android, BlackBerry 10 and iOS to populate fsMap.\nrequire('./fileSystems').getFs = function(name, callback) {\n    function success(response) {\n        fsMap = {};\n        for (var i = 0; i < response.length; ++i) {\n            var fsRoot = response[i];\n            var fs = new FileSystem(fsRoot.filesystemName, fsRoot);\n            fsMap[fs.name] = fs;\n        }\n        callback(fsMap[name]);\n    }\n\n    if (fsMap) {\n        callback(fsMap[name]);\n    } else {\n        exec(success, null, \"File\", \"requestAllFileSystems\", []);\n    }\n};\n\n\n});\n"],"sourceRoot":"/source/"}